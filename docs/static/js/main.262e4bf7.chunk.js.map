{"version":3,"sources":["components/FooterComponent.js","helpers/getVacunasCyL.js","hooks/useFetch.js","selectors/personas-vacunadas/getPersonasVacunadas.js","components/Graphics.js","functions/renameKeyObj.js","selectors/vacunas-recibidas/getVacunasRecibidas.js","components/MapComponent.js","hooks/useWindowSize.js","components/theme/themeSwitchReduce.js","components/theme/ThemeSwitchComponent.js","hooks/useLocalStorage.js","components/SpinnerComponent.js","components/vacunas-administradas/CardDosisAdministradasComponent.js","components/vacunas-administradas/DosisAdministradasComponent.js","components/vacunas-recibidas/VacunasRecibidasComponent.js","CovidCyLComponent.js","index.js"],"names":["FooterComponent","className","href","getVacunasCyL","a","lines","dataset","url","fetch","resp","json","records","vacunasrecibidas","map","record","id","recordid","fields","useFetch","rows","datset","isMounted","useRef","useState","isLogin","data","error","state","setState","useEffect","then","current","getPersonasVacunadas","total","filter","provincia","reduce","count","dosis_administradas","ciclototal","personas_vacunadas_ciclo_completo","groupByDosisProvincia","group","vacuna","totalProgresivo","Graphics","personasvacunadasproprovincia","svg","d3","margin","top","right","bottom","left","y","domain","d","nice","range","x","fecha","line","defined","isNaN","append","call","g","attr","select","remove","clone","text","ticks","tickSizeOuter","datum","viewBox","renameKeys","object","key","newKey","obj","clonedObj","Object","assign","targetKey","getVacunasRecibidas","total_vacunas_recibidas","parseInt","groupByMarca","groups","marca","groupByVacunasProvincias","MapComponent","windowSize","with","height","setwindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","projection","scale","center","pathGenerator","fillmap","numeroVacunas","features","i","data-tip","properties","name","data-for","style","fill","aria-haspopup","getContent","dataTip","themeSwitchReduce","action","type","document","documentElement","setAttribute","active","removeAttribute","ThemeSwitchComponent","useReducer","dispatch","initialValue","item","localStorage","getItem","storagevalues","setStorage","setItem","useLocalStorage","handleOnClick","onClick","role","SpinnerComponent","otherclass","data-testid","CardDosisAdministradasComponent","title","img","loading","src","alt","DosisAdministradasComponent","informations","sumaReduce","information","VacunasRecibidasComponent","AstraZeneca","Moderna","Pfizer","Janssen","CovidCyLComponent","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.262e4bf7.chunk.js","sourcesContent":["import React from 'react'\n\n/*\n* Componente project information\n*/\nexport const FooterComponent = () => {\n    return (\n        <>\n        <footer className=\"footer\">\n            <p>\n                Desarrollado por <a href='https://github.com/adilosa95'>Alejandro Díez</a> inspirado en el proyecto <a href='https://covid-vacuna.app/'>Covid-vacuna</a>\n            </p>\n            <p>\n                Si quieres mi proyecto <a href='https://github.com/adilosa95/covid-vacuna-cyl'>aquí está</a>\n            </p>\n            <div><a href='https://www.linkedin.com/in/adilosa95/'>Linkedin</a> | <a href='https://github.com/adilosa95'>Github</a> | <a href='https://dev.to/adilosa95'>Dev</a></div>\n        </footer>\n        </>\n    )\n}\n","/**\n * Funtion to call enpoints Api\n */\nexport const getVacunasCyL = async( lines = '1000' , dataset) =>{\n\n    const url = `https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=${dataset}&q=&rows=${lines}&sort=fecha&facet=fecha&facet=provincia&facet=marca`;\n    \n    const resp = await fetch(url)\n    const  { records }  = await resp.json() \n\n    const vacunasrecibidas = records?.map( record =>{ \n        return{\n            id: record.recordid,\n            fields: record.fields\n        }\n    })\n    return vacunasrecibidas;\n}","import { useEffect, useRef, useState } from \"react\"\nimport { getVacunasCyL } from \"../helpers/getVacunasCyL\"\n\n\n\nexport const useFetch = ( rows , datset ) =>{\n\n    const isMounted = useRef(true)\n    \n    const [isLogin] = useState(true)\n\n    const [state, setState] = useState({ data: null , error: null , isLogin })\n\n\n    useEffect(() => {\n        getVacunasCyL( rows , datset)\n        .then(\n            data =>{\n                isMounted.current\n                ?\n                    setState({\n                        data: data,\n                        error: null,\n                        isLogin: false\n                    })\n                :\n                    setState({\n                        data: null,\n                        error: 'Error al cargar',\n                        isLogin: true\n                    })\n            }\n        )\n    }, [rows ,  datset])\n\n    return state;\n}","/**\n * \n */\n\nexport const getPersonasVacunadas = ( records )=>{\n\n\n    const total = records?.filter((data) => data.fields.provincia === \"TotalCyL\").reduce((count  , data)=>{\n        const { dosis_administradas  } = data.fields\n\n        return count + dosis_administradas;\n    }, 0)\n\n\n    const ciclototal = records?.filter((data) => data.fields.provincia === \"TotalCyL\").reduce((count  , data) =>\n    {\n        const { personas_vacunadas_ciclo_completo } = data.fields\n        \n        return count + personas_vacunadas_ciclo_completo;\n    },0)\n\n   \n    const groupByDosisProvincia = records?.reduce((group , data)=>{\n        const { dosis_administradas , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna: 0}\n        group[provincia].vacuna += dosis_administradas\n\n\n        return group;\n    }, {})\n\n    const totalProgresivo = records?.filter((data) => data.fields.provincia === \"TotalCyL\");\n\n    return {total , ciclototal, ...groupByDosisProvincia, totalProgresivo};\n}","import React from 'react'\n\nimport * as d3  from \"d3\";\n\nimport { useFetch } from '../hooks/useFetch';\nimport { getPersonasVacunadas } from '../selectors/personas-vacunadas/getPersonasVacunadas';\n\n\nexport const Graphics = () => {\n    const { data: personasvacunadasproprovincia , isLogin } = useFetch( 3000 , 'personas-vacunadas-covid')\n    const { totalProgresivo } =  getPersonasVacunadas( personasvacunadasproprovincia )\n    const svg = d3.select(\".grap\")\n\n    if(!isLogin && totalProgresivo)\n    {\n        //Add X\n        const margin = {\n            top: 20,\n            right: 30,\n            bottom: 30,\n            left: 40\n          }\n          const yAxis = (g) => g\n                    .attr(\"transform\", `translate(${margin.left},0)`)\n                    .call(d3.axisLeft(y))\n                    .call(g => g.select(\".domain\").remove())\n                    .call(g => g.select(\".tick:last-of-type text\").clone()\n                        .attr(\"x\", 3)\n                        .attr(\"text-anchor\", \"start\")\n                        .attr(\"font-weight\", \"bold\")\n                        .text(\"\"))\n          const y = d3.scaleLinear()\n          .domain([0, d3.max(totalProgresivo, d => d.fields.dosis_administradas)]).nice()\n          .range([700 - margin.bottom, margin.top])\n\n          const xAxis = (g) => g\n          .attr(\"transform\", `translate(0,${700 - margin.bottom})`)\n          .call(d3.axisBottom(x).ticks(1000 / 80).tickSizeOuter(0))\n\n          const x = d3.scaleUtc()\n          .domain(d3.extent(totalProgresivo, d => (d3.timeParse(\"%Y-%m-%d\")(d.fields.fecha))))\n          .range([margin.left, 900 - margin.right])\n\n          const line = d3.line()\n            .defined(d => !isNaN(d.fields.dosis_administradas))\n            .x(d => x((d3.timeParse(\"%Y-%m-%d\")(d.fields.fecha))))\n            .y(d => y(d.fields.dosis_administradas))\n\n           svg.append(\"g\")\n                .call(yAxis)\n            \n            \n           svg.append(\"g\")\n           .call(xAxis)\n\n\n           svg.append(\"path\")\n           .datum(totalProgresivo)\n           .attr(\"fill\", \"none\")\n           .attr(\"stroke\", \"var(--primary--color)\")\n           .attr(\"stroke-width\", 5)\n           .attr(\"d\", line); \n    }    \n    return (\n        <div>\n            <svg \n            className=\"graphic\"\n\n            viewBox=\"-120 0 1200 700\"\n            >\n                <g \n                className=\"grap center-grap\">\n                </g>\n            </svg>\n        </div>\n    )\n}\n","/**\n * \n * @param {*} obj \n * @returns \n * \n * This function had to be created because, when doing the reducer and grouping, the keys of the object had separations.\n */\n\n//Initial clone object functiom\nconst clone = (obj) => Object.assign({}, obj);\n\nexport const renameKeys = (object, key, newKey) => {\n    //pass original objecto to clone\n     const clonedObj = clone(object);\n    //Catch original keys\n     const targetKey = clonedObj[key];\n    //Delete original key\n     delete clonedObj[key];\n    //asing new key\n     clonedObj[newKey] = targetKey;\n    //Return new object with new key\n     return clonedObj;\n   \n   };\n","\nimport { renameKeys } from '../../functions/renameKeyObj';\n/**\n * Method to add up all the figures of the vaccines, as the API does not give the option\n * @param {*} records \n * @returns \n */\nexport const getVacunasRecibidas = ( records )=>{\n\n    \n    const total = records?.reduce((count , data)=>{\n        const { total_vacunas_recibidas  } = data.fields\n\n        return count + parseInt(total_vacunas_recibidas);\n    }, 0)\n\n    let groupByMarca = records?.reduce((groups , data)=>{\n        const { total_vacunas_recibidas , marca } = data.fields\n        \n        groups[marca] = groups[marca] || {vacuna:0}\n        groups[marca].vacuna += total_vacunas_recibidas\n        \n        return groups;\n    }, {})\n\n    groupByMarca = renameKeys(groupByMarca , 'Astra Zéneca' , 'AstraZeneca')\n    groupByMarca = renameKeys(groupByMarca , 'Pfizer- BioNTech' , 'Pfizer')\n    \n    const groupByVacunasProvincias = records?.reduce((group , data)=>{\n        const { total_vacunas_recibidas  , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna:0}\n        group[provincia].vacuna += total_vacunas_recibidas\n\n        return group;\n    }, {})\n    \n    return { total, groupByMarca , groupByVacunasProvincias};\n}","import React from 'react'\nimport ReactTooltip from 'react-tooltip';\nimport data from '../data/cyl.geo.json'\n\nimport * as d3  from \"d3\";\n\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { useFetch } from '../hooks/useFetch';\nimport { getPersonasVacunadas } from '../selectors/personas-vacunadas/getPersonasVacunadas';\nimport { getVacunasRecibidas } from '../selectors/vacunas-recibidas/getVacunasRecibidas';\n\n\nexport const MapComponent = () => {\n        \n\n    const { data: personasvacunadasproprovincia  } = useFetch( 3000 , 'personas-vacunadas-covid')\n    const { ...groupByDosisProvincia } =  getPersonasVacunadas( personasvacunadasproprovincia )\n\n    const { data: vacunasrecibidas  } = useFetch(36 , 'vacunas-recibidas-covid')\n    const { groupByVacunasProvincias } = getVacunasRecibidas( vacunasrecibidas )\n\n    const  {windowSize}  = useWindowSize();\n    //Projection to map\n    const projection = d3.geoMercator()\n                        .scale([windowSize.with > 722 ? 6800 :  (950 * windowSize.with)/100])\n                        .center([ windowSize.with > 435 ?  (-0.45 * windowSize.with)/100 : windowSize.with > 360 ? (-0.05* windowSize.with)/100  : ( 0.20 * windowSize.with)/100  , windowSize.with > 500 ? 42 : 41.2])\n    //Paint var to json\n    const pathGenerator = d3.geoPath().projection(projection)\n    \n    const fillmap = (provincia) =>{\n        const numeroVacunas = groupByDosisProvincia[provincia] || ''\n\n        if(numeroVacunas){\n            if(numeroVacunas.vacuna <= 85000)\n                return '#6ACA2B'\n            if(numeroVacunas.vacuna <= 95000)\n                return '#63BF28'\n            if(numeroVacunas.vacuna <= 115000)\n                return '#57AC20'\n            if(numeroVacunas.vacuna <= 135000)\n                return '#50A01D'\n            if(numeroVacunas.vacuna <= 145000)\n                return '#438B16'\n            if(numeroVacunas.vacuna <= 155000)\n                return '#3B7C13'\n            if(numeroVacunas.vacuna <= 205000)\n                return '#367310'\n            if(numeroVacunas.vacuna <= 255000)\n                return '#2F670C'\n            if(numeroVacunas.vacuna <= 305000)\n                return '#2B5F0A'\n            if(numeroVacunas.vacuna <= 355000)\n                return '#255905'\n        }\n        return 'green'\n    }\n\n    return (\n        <>     \n        <svg          \n            className=\"cylmap centerItem\"\n        >\n         {\n            data.features.map((d,i)=>\n            <path\n                key={`path${i}`}\n                d={pathGenerator(d)}\n                className=\"provincies\"\n                data-tip={d.properties.name} //We pass the province to the toolip\n                data-for='data-province'\n                style={{fill: fillmap(d.properties.name)}}\n            />\n            )\n        }\n        </svg>\n        <ReactTooltip id='data-province' aria-haspopup='true' getContent={(dataTip)=>\n            !groupByDosisProvincia[dataTip] || !groupByVacunasProvincias[dataTip]\n            ?\n            dataTip\n            :\n            <div className=\"t-small\">\n                <div className='t-small t-center'>{dataTip}</div>\n                <p> - Dosis Administradas: {groupByDosisProvincia[dataTip].vacuna}</p>\n                <p> - Dosis Recibidas: {groupByVacunasProvincias[dataTip].vacuna}</p>\n            </div>\n        }/>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\n\n\n\nexport const useWindowSize = () =>{\n    //Inicialite with/heigth for server an render to match\n    const [windowSize, setwindowSize] = useState({\n        with: '',\n        height: '',\n    });\n\n    useEffect(() => {\n        //Call function on window resize\n        const handleResize = () =>{\n            setwindowSize({\n                with: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n        //Add event listener\n        window.addEventListener(\"resize\" , handleResize)\n        //CalResize when update initial size\n        handleResize();\n        //remove before eventi listener\n        return () => window.removeEventListener(\"resize\" , handleResize)\n    },[])\n\n   return {windowSize}\n}","\n/**\n * Switch that composes each activation case, in which the predefined theme of your choice is stored. \n*/\nexport const themeSwitchReduce = ( state = [],action )=>{\n\n    switch (action.type) {\n        case 'light':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             \n             return { type: action.type , active: 'isActivated'};\n\n         case 'dark':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n\n             return { type: action.type , active: 'isActivated'};\n\n        default:\n\n            document.documentElement.removeAttribute('data-theme')\n\n            return { type: action.type , active: 'isActivated'};\n        }\n}","import React, { useEffect, useReducer } from 'react'\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { themeSwitchReduce } from './themeSwitchReduce';\n\n/**\n * Check init localstorage\n*/\n\nexport const ThemeSwitchComponent = () => {\n\n    const [state, dispatch] = useReducer(themeSwitchReduce , '')\n    //Inicializamos con el theme del sistema\n    const [storagevalues , setStorage] = useLocalStorage('data-theme','other')\n\n    /**\n     * Lee el valor por guardado del hook local storage\n     */\n    useEffect(() => {\n        //cambia el tema en el sistema por el que esté\n        dispatch({\n            type: storagevalues\n        })\n\n    }, [storagevalues])\n\n    //Llamada para poder cambiar manualmente el theme de la pagina\n    const  handleOnClick = ( type )  => {\n        //disparador\n        dispatch({ type: type })\n        //cambio en el localstorage\n        setStorage(type)\n    }\n    /**\n     * If useReducer return state ative, check is same to type and add class isActiviated\n     */\n    return (\n        <div className='switchComponent'>\n            <label\n                className={`theme ${state.type === 'light' ? state.active : ''}`}\n                onClick={() => handleOnClick('light')}\n            >\n                <span role='img'>☀️</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'other' ? state.active : ''}`}\n                 onClick={() => handleOnClick('other')}\n\n            >\n                <span role='img'>💻</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'dark' ? state.active : ''}`}\n                 onClick={() => handleOnClick('dark')}\n\n            >\n                <span role='img'>🌑</span>\n            </label>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\"\n\n\n\nexport const useLocalStorage = (key, initialValue)=>{\n\n    \n    const [storagevalues, setStorage] = useState(()=>{//Cuando llega las vairables incializadas se dispara\n        try{\n            //Coge el tema que hay\n            const item = localStorage.getItem(key)\n            //Comporbamos que el local storage esté inicializado,sino es asi devuelve su\n            return item !== null ? item : initialValue;\n        }catch(error){\n            return initialValue\n        }\n    })\n    //Lanzamos el efecto para que se guarde en local storage\n    useEffect(() => {\n            localStorage.setItem(key , storagevalues)\n    }, [key , storagevalues])\n\n    return[ storagevalues, setStorage]\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n/**\n * \n * Component Spinner when loading data\n * @returns \n */\nexport const SpinnerComponent = ({otherclass = 'p-inline-block'}) => {\n    return (\n        <div className={`spinner ${otherclass}`} data-testid='loading'>\n        </div>\n    )\n}\n\nSpinnerComponent.propTypes ={\n    otherclass: PropTypes.string\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SpinnerComponent } from '../SpinnerComponent'\n/**\n * \n * Component forming the card\n */\nexport const CardDosisAdministradasComponent = ({ total = 0,title, img, loading}) => {\n\n\n    return (\n        <div className=\"maincard card-fiexWidth-midle\">\n            <header>\n                <img \n                className='header-img'\n                src={`${img}.svg`} \n                alt='icono_vacuna' \n                />\n                <p className='t-midle'>{ title }</p>\n            </header>\n            {\n                !loading\n                ?\n                <div className=\"data t-big\">{total}</div>\n                :\n                <SpinnerComponent></SpinnerComponent>\n            }\n        </div>\n    )\n}\n\n/**\n * Proptypes\n * To form the card, the title and the total are necessary\n */\nCardDosisAdministradasComponent.propTypes= {\n    total: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n}","import React from 'react'\nimport { CardDosisAdministradasComponent } from './CardDosisAdministradasComponent'\nimport { useFetch } from '../../hooks/useFetch'\nimport { getPersonasVacunadas } from '../../selectors/personas-vacunadas/getPersonasVacunadas'\n\n/**\n * Component form cards \n *  -vacunas administradas\n *  -ciclo completo\n * @returns \n */\nexport const DosisAdministradasComponent = () => {\n\n    const { data , isLogin } = useFetch( 3000 ,  'personas-vacunadas-covid')\n    const { total , ciclototal  } = getPersonasVacunadas(data)\n    //Create array to tow data \n    const informations = [\n        {\n            id:  0,\n            title:'Personas vacunadas',\n            sumaReduce: total,\n            img: './assets/icons/admin_vacuna'\n        },\n        {\n            id:  1,\n            title:'Personas con pauta completa',\n            sumaReduce: ciclototal,\n            img: './assets/icons/vacuna_completa'\n        }\n    ]\n    return (\n        <>\n            <div className=\"center-item-wrap flex-column\">\n                {\n                    informations.map( information => (\n                        <CardDosisAdministradasComponent\n                            key={information.id}\n                            total={information.sumaReduce}\n                            title={information.title}\n                            img={information.img}\n                            loading={isLogin}\n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}","import React from 'react'\nimport { useFetch } from '../../hooks/useFetch';\nimport { getVacunasRecibidas } from '../../selectors/vacunas-recibidas/getVacunasRecibidas';\nimport { SpinnerComponent } from '../SpinnerComponent';\n/**\n * Component for 'Vacunas recbidas'\n * and brand vaccine type\n * @returns \n */\nexport const VacunasRecibidasComponent = () => {\n    //Because to 36 lines is equals to last modification\n    const { data , isLogin } = useFetch(36 , 'vacunas-recibidas-covid')\n    const { total , groupByMarca: { AstraZeneca, Moderna ,Pfizer, Janssen } }  = getVacunasRecibidas( data )\n    return (\n        <div>\n            <div className=\"center-item-wrap\">\n                { \n                !isLogin ?\n                    <div className=\"maincard card-fiexWidth-big\" data-testid='list'>\n                    <header className=\"t-big\">Total</header>\n                    <div className=\"data t-big\">{total}</div>\n                    {\n                    <ul className='types-vaccines'>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/pfizer.png' alt='Pfizer'/>\n                            <div>{Pfizer.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/moderna.png' alt='Moderna'/>\n                            <div>{Moderna.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/astraceneca.png' alt='Astraceneca'/>\n                            <div>{AstraZeneca.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/janssen.png' alt='Astraceneca'/>\n                            <div>{Janssen.vacuna}</div>\n                        </li>\n                    </ul>\n                    }\n                    </div>\n                :<SpinnerComponent></SpinnerComponent>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FooterComponent } from './components/FooterComponent'\nimport { Graphics } from './components/Graphics'\nimport { MapComponent } from './components/MapComponent'\nimport { ThemeSwitchComponent } from './components/theme/ThemeSwitchComponent'\nimport { DosisAdministradasComponent } from './components/vacunas-administradas/DosisAdministradasComponent'\nimport { VacunasRecibidasComponent } from './components/vacunas-recibidas/VacunasRecibidasComponent'\n\nexport const CovidCyLComponent = () => {\n\n    return (\n        <>\n        <ThemeSwitchComponent/>\n        <h1 className=\"t-center t-big\">\n            Vacunación contra la COVID-19 en Castilla y León\n        </h1>\n        <h3 \n        className=\"t-center t-big\">\n            Vacunas Adminitradas\n        </h3>\n        <DosisAdministradasComponent />\n        <h3\n        className=\"t-center t-big\">\n            Total de vacunas recibidas\n        </h3>\n        <VacunasRecibidasComponent/>\n        <h1 \n        className=\"t-center t-big\"\n        >\n            Datos por provincias\n        </h1>\n        <MapComponent/>\n        <h1 className='t-center t-midle'>Progreso de vacunación</h1>\n\n        <Graphics/>\n        <div>\n            <h1 className='t-center t-big'>Datos obtenidos</h1>\n            <p\n                className='t-center t-small'\n            ><img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            /><a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/vacunas-recibidas-covid/'}>\n                API de la Junta de Castilla y León Vacunas recibidas covid\n            </a></p>\n            <p\n                className='t-center t-small'\n            >\n            <img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            />\n            <a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/personas-vacunadas-covid/'}>\n                API de la Junta de Castilla y León Personas vacunadas covid\n            </a>\n            </p>\n        </div>\n        <FooterComponent/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\n\nimport { CovidCyLComponent } from './CovidCyLComponent';\n\nReactDOM.render(\n    <CovidCyLComponent />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}