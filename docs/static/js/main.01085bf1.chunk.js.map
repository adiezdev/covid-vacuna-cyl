{"version":3,"sources":["components/FooterComponent.js","helpers/getVacunasCyL.js","hooks/useFetch.js","selectors/personas-vacunadas/getTotalPersonasVacunadas.js","functions/functionRemaneKeysObj.js","selectors/vacunas-recibidas/getTotalVacunasRecibidas.js","components/MapComponent.js","hooks/useWindowSize.js","components/theme/themeSwitchReduce.js","components/theme/ThemeSwitchComponent.js","components/vacunas-administradas/CardDosisAdministradasComponent.js","components/vacunas-administradas/DosisAdministradasComponent.js","components/vacunas-recibidas/VacunasRecibidasComponent.js","CovidCyLComponent.js","index.js"],"names":["FooterComponent","className","href","getVacunasCyL","a","lines","dataset","url","fetch","resp","json","records","vacunasrecibidas","map","record","id","recordid","fields","useFetch","rows","datset","isMounted","useRef","useState","isLogin","data","error","state","setState","useEffect","current","then","getTotalPersonasVacunadas","total","reduce","count","dosis_administradas","ciclototal","personas_vacunadas_ciclo_completo","groupByDosisProvincia","group","provincia","vacuna","renameKeys","object","key","newKey","obj","clonedObj","Object","assign","targetKey","getTotalVacunasRecibidas","total_vacunas_recibidas","parseInt","groupByMarca","groups","marca","groupByVacunasProvincias","MapComponent","personasvacunadasproprovincia","datapersonasVacunadas","size","with","undefined","height","windowSize","setwindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","projection","d3","scale","center","pathGenerator","features","d","i","data-tip","properties","name","data-for","aria-haspopup","getContent","dataTip","themeSwitchReduce","action","type","document","documentElement","setAttribute","localStorage","setItem","active","removeAttribute","init","getItem","ThemeSwitchComponent","useReducer","dispatch","theme","onClick","role","CardDosisAdministradasComponent","title","img","loading","src","alt","popTypes","PropTypes","number","isRequired","string","DosisAdministradasComponent","informations","sumaReduce","information","VacunasRecibidasComponent","AstraZeneca","Moderna","Pfizer","console","log","CovidCyLComponent","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.01085bf1.chunk.js","sourcesContent":["import React from 'react'\n\n/*\nComponente con información del proyecto estático\n*/\nexport const FooterComponent = () => {\n    return (\n        <>\n        <footer className=\"footer\">\n            <p>\n                Desarrollado por <a href='https://github.com/adilosa95'>Alejandro Díez</a> inspirado en el proyecto <a href='https://covid-vacuna.app/'>Covid-vacuna</a>\n            </p>\n            <p>\n                Si quieres mi proyecto <a href='https://github.com/adilosa95/covid-vacuna-cyl'>aquí está</a>\n            </p>\n            <div><a href='https://www.linkedin.com/in/adilosa95/'>Linkedin</a> | <a href='https://github.com/adilosa95'>Github</a> | <a href='https://dev.to/adilosa95'>Dev</a></div>\n        </footer>\n        </>\n    )\n}\n","\nexport const getVacunasCyL = async( lines = '1000' , dataset) =>{\n\n    const url = `https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=${dataset}&q=&rows=${lines}&sort=fecha&facet=fecha&facet=provincia&facet=marca`;\n    \n    const resp = await fetch(url)\n    const  { records }  = await resp.json() \n\n    const vacunasrecibidas = records?.map( record =>{ \n        return{\n            id: record.recordid,\n            fields: record.fields\n        }\n    })\n    return vacunasrecibidas;\n}","import { useEffect, useRef, useState } from \"react\"\nimport { getVacunasCyL } from \"../helpers/getVacunasCyL\"\n\n\n\nexport const useFetch = ( rows , datset ) =>{\n\n    const isMounted = useRef(true)\n    \n    const [isLogin] = useState(true)\n\n    const [state, setState] = useState({ data: null , error: null , isLogin })\n\n    useEffect(() => {\n        return () =>{\n            isMounted.current = false;\n        }        \n    }, [])\n\n    useEffect(() => {\n        getVacunasCyL( rows , datset)\n        .then(\n            data =>{\n                isMounted.current\n                ?\n                    setState({\n                        data: data,\n                        error: null,\n                        isLogin: false\n                    })\n                :\n                    setState({\n                        data: null,\n                        error: 'Error al cargar',\n                        isLogin: true\n                    })\n            }\n        )\n    }, [rows ,  datset])\n\n    return state;\n}","/**\n * Method to add up all the figures of the vaccines, as the API does not give the option\n * @param {*} records \n * @returns \n */\n\nexport const getTotalPersonasVacunadas = ( records )=>{\n\n\n    const total = records?.reduce((count  , data)=>{\n        const { dosis_administradas } = data.fields\n\n        return count + dosis_administradas;\n    }, 0)\n\n\n    const ciclototal = records?.reduce((count  , data) =>\n    {\n        const { personas_vacunadas_ciclo_completo } = data.fields\n        \n        return count + personas_vacunadas_ciclo_completo;\n    },0)\n\n   \n    const groupByDosisProvincia = records?.reduce((group , data)=>{\n        const { dosis_administradas , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna: 0}\n        group[provincia].vacuna += dosis_administradas\n\n\n        return group;\n    }, {})\n\n\n    return {total , ciclototal, ...groupByDosisProvincia};\n}","/**\n * \n * @param {*} obj \n * @returns \n * \n * Function that renames the keys of an object according to the group\n */\n\n//Initial clone object functiom\nconst clone = (obj) => Object.assign({}, obj);\n\nexport const renameKeys = (object, key, newKey) => {\n    //pass original objecto to clone\n     const clonedObj = clone(object);\n    //Catch original keys\n     const targetKey = clonedObj[key];\n    //Delete original key\n     delete clonedObj[key];\n    //asing new key\n     clonedObj[newKey] = targetKey;\n    //Return new object with new key\n     return clonedObj;\n   \n   };\n","\nimport { renameKeys } from '../../functions/functionRemaneKeysObj';\n/**\n * Method to add up all the figures of the vaccines, as the API does not give the option\n * @param {*} records \n * @returns \n */\nexport const getTotalVacunasRecibidas = ( records )=>{\n\n    \n    const total = records?.reduce((count , data)=>{\n        const { total_vacunas_recibidas  } = data.fields\n\n        return count + parseInt(total_vacunas_recibidas);\n    }, 0)\n\n    let groupByMarca = records?.reduce((groups , data)=>{\n        const { total_vacunas_recibidas , marca } = data.fields\n        \n        groups[marca] = groups[marca] || {vacuna:0}\n        groups[marca].vacuna += total_vacunas_recibidas\n        \n        return groups;\n    }, {})\n\n    groupByMarca = renameKeys(groupByMarca , 'Astra Zéneca' , 'AstraZeneca')\n    groupByMarca = renameKeys(groupByMarca , 'Pfizer- BioNTech' , 'Pfizer')\n    \n    const groupByVacunasProvincias = records?.reduce((group , data)=>{\n        const { total_vacunas_recibidas  , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna:0}\n        group[provincia].vacuna += total_vacunas_recibidas\n\n        return group;\n    }, {})\n    \n    return { total, groupByMarca , groupByVacunasProvincias};\n}","import React from 'react'\nimport ReactTooltip from 'react-tooltip';\nimport data from '../data/cyl.geo.json'\n\nimport * as d3  from \"d3\";\n\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { useFetch } from '../hooks/useFetch';\nimport { getTotalPersonasVacunadas } from '../selectors/personas-vacunadas/getTotalPersonasVacunadas';\nimport { getTotalVacunasRecibidas } from '../selectors/vacunas-recibidas/getTotalVacunasRecibidas';\n\n\nexport const MapComponent = () => {\n        \n\n    const { data: personasvacunadasproprovincia  } = useFetch( 1000 , 'personas-vacunadas-covid')\n    const datapersonasVacunadas =  getTotalPersonasVacunadas( personasvacunadasproprovincia )\n    const { ...groupByDosisProvincia } = datapersonasVacunadas;\n\n    const { data: vacunasrecibidas  } = useFetch(27 , 'vacunas-recibidas-covid')\n    const sumaReduce = getTotalVacunasRecibidas( vacunasrecibidas )\n\n    const { groupByVacunasProvincias } = sumaReduce;\n\n\n    const size = useWindowSize();\n    //Projection to map\n    const projection = d3.geoMercator()\n                        .scale([size.with > 722 ? 6800 :  (950 * size.with)/100])\n                        .center([ size.with > 435 ?  (-0.45 * size.with)/100 : size.with > 360 ? (-0.05* size.with)/100  : ( 0.20 * size.with)/100  , size.with > 500 ? 42 : 41.2])\n    //Paint var to json\n    const pathGenerator = d3.geoPath().projection(projection)\n    \n    return (\n        <>     \n        <svg          \n            className=\"cylmap centerItem\"\n        >\n         {\n            data.features.map((d,i)=>\n            <path\n                key={`path${i}`}\n                d={pathGenerator(d)}\n                className=\"provincies\"\n                data-tip={d.properties.name}\n                data-for='data-province'\n            />\n            )\n        }\n        </svg>\n        <ReactTooltip id='data-province' aria-haspopup='true' getContent={(dataTip)=>\n            !groupByDosisProvincia[dataTip] || !groupByVacunasProvincias[dataTip]\n            ?\n            dataTip\n            :\n            <div className=\"t-small\">\n                <div className='t-center-small'>{dataTip}</div>\n                <p> - Dosis Administradas: {groupByDosisProvincia[dataTip].vacuna}</p>\n                <p> - Dosis Recibidas: {groupByVacunasProvincias[dataTip].vacuna}</p>\n            </div>\n        }/>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\n\n\n\nexport const useWindowSize = () =>{\n    //Inicialite with/heigth for server an render to match\n    const [windowSize, setwindowSize] = useState({\n        with: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        //Call function on window resize\n        const handleResize = () =>{\n            setwindowSize({\n                with: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n        //Add event listener\n        window.addEventListener(\"resize\" , handleResize)\n        //CalResize when update initial size\n        handleResize();\n        //remove before eventi listener\n        return () => window.removeEventListener(\"resize\" , handleResize)\n    },[])\n\n   return windowSize\n}","\n/**\n * Switch that composes each activation case, in which the predefined theme of your choice is stored. \n*/\nexport const themeSwitchReduce = ( state = [],action )=>{\n\n    switch (action.type) {\n        case 'light':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             localStorage.setItem('data-theme',action.type)\n\n\n             return { type: action.type , active: 'isActivated'};\n\n         case 'dark':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             localStorage.setItem('data-theme',action.type)\n\n\n             return { type: action.type , active: 'isActivated'};\n\n        default:\n\n            document.documentElement.removeAttribute('data-theme')\n             localStorage.setItem('data-theme',action.type)\n            \n            return { type: action.type , active: 'isActivated'};\n        }\n}","import React, { useEffect, useReducer } from 'react'\nimport { themeSwitchReduce } from './themeSwitchReduce';\n\n/**\n * Check init localstorage\n*/\nconst init = () =>{\n    return localStorage.getItem('data-theme') || ''\n}\n\nexport const ThemeSwitchComponent = () => {\n\n    const [state, dispatch] = useReducer(themeSwitchReduce , init)\n\n    /**\n     * When logadind compoenent, check theme in local storage\n     * if not init, predefinied 'other' in useReducer\n    */\n    useEffect(() => {\n        \n        const theme = localStorage.getItem('data-theme') || 'other'\n\n        dispatch({\n            type: theme\n        })\n    }, [])\n    /**\n     * If useReducer return state ative, check is same to type and add class isActiviated\n     */\n    return (\n        <div className='switchComponent'>\n            <label\n                className={`theme ${state.type === 'light' ? state.active : ''}`}\n                onClick={() => dispatch({\n                    type: 'light'\n                })}\n            >\n                <span role='img'>☀️</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'other' ? state.active : ''}`}\n                 onClick={() => dispatch({\n                    type: 'other'\n                })}\n            >\n                <span role='img'>💻</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'dark' ? state.active : ''}`}\n                 onClick={() => dispatch({\n                    type: 'dark'\n                })}\n            >\n                <span role='img'>🌑</span>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n/**\n * \n * @param {*} param0 \n * @returns \n * \n * Component card vaccine\n */\nexport const CardDosisAdministradasComponent = ({ total,title, img, loading}) => {\n\n\n    return (\n        <div className=\"maincard card-fiexWidth-midle\">\n            <header>\n                <img \n                className='header-img'\n                src={`${img}.svg`} \n                alt='icono_vacuna' \n                />\n                <p className='t-midle'>{ title }</p>\n            </header>\n            {\n                !loading\n                ?\n                <div className=\"data t-big\">{total}</div>\n                :\n                <div className=\"spinner p-inline-block\"></div>\n            }\n        </div>\n    )\n}\n\n/**\n * Proptypes\n * To form the card, the title and the total are necessary\n */\nCardDosisAdministradasComponent.popTypes= {\n    total: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n}","import React from 'react'\nimport { CardDosisAdministradasComponent } from './CardDosisAdministradasComponent'\nimport { useFetch } from '../../hooks/useFetch'\nimport { getTotalPersonasVacunadas } from '../../selectors/personas-vacunadas/getTotalPersonasVacunadas'\n\n/**\n * Component form cards \n *  -vacunas administradas\n *  -ciclo completo\n * @returns \n */\nexport const DosisAdministradasComponent = () => {\n\n    const { data , isLogin } = useFetch( 1000 ,  'personas-vacunadas-covid')\n    const { total , ciclototal  } = getTotalPersonasVacunadas(data)\n    //Create array to tow data \n    const informations = [\n        {\n            id:  0,\n            title:'Personas vacunadas',\n            sumaReduce: total,\n            img: './assets/icons/admin_vacuna'\n        },\n        {\n            id:  1,\n            title:'Personas con pauta completa',\n            sumaReduce: ciclototal,\n            img: './assets/icons/vacuna_completa'\n        }\n    ]\n    return (\n        <>\n            <div className=\"center-item-wrap flex-column\">\n                {\n                    informations.map( information => (\n                        <CardDosisAdministradasComponent\n                            key={information.id}\n                            total={information.sumaReduce}\n                            title={information.title}\n                            img={information.img}\n                            loading={isLogin}\n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}","import React from 'react'\nimport { useFetch } from '../../hooks/useFetch';\nimport { getTotalVacunasRecibidas } from '../../selectors/vacunas-recibidas/getTotalVacunasRecibidas';\n/**\n * Component for 'Vacunas recbidas'\n * and brand vaccine type\n * @returns \n */\nexport const VacunasRecibidasComponent = () => {\n    //Because to 27 lines is equals to lat modification\n    const { data , isLogin } = useFetch(27 , 'vacunas-recibidas-covid')\n    const sumaReduce = getTotalVacunasRecibidas( data )\n    \n    //Desestructuin data\n    const { total , groupByMarca} = sumaReduce;\n    \n    const { AstraZeneca, Moderna ,Pfizer } = {...groupByMarca}\n\n    console.log(groupByMarca);\n    return (\n        <div>\n            <div className=\"center-item-wrap\">\n                { \n                !isLogin ?\n                    <div className=\"maincard card-fiexWidth-big\">\n                    <header className=\"t-big\">Total</header>\n                    <div className=\"data t-big\">{total}</div>\n                    {\n                    <ul className='types-vaccines'>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/pfizer.png' alt='Pfizer'/>\n                            <div>{Pfizer.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/moderna.png' alt='Moderna'/>\n                            <div>{Moderna.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/astraceneca.png' alt='Astraceneca'/>\n                            <div>{AstraZeneca.vacuna}</div>\n                        </li>\n                    </ul>\n                    }\n                    </div>\n                :<div className=\"spinner p-inline-block\"></div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FooterComponent } from './components/FooterComponent'\nimport { MapComponent } from './components/MapComponent'\nimport { ThemeSwitchComponent } from './components/theme/ThemeSwitchComponent'\nimport { DosisAdministradasComponent } from './components/vacunas-administradas/DosisAdministradasComponent'\nimport { VacunasRecibidasComponent } from './components/vacunas-recibidas/VacunasRecibidasComponent'\n\nexport const CovidCyLComponent = () => {\n\n    return (\n        <>\n        <ThemeSwitchComponent/>\n        <h1 className=\"t-center t-big\">\n            Vacunación contra la COVID-19 en Castilla y León\n        </h1>\n        <h3 \n        className=\"t-center t-big\">\n            Vacunas Adminitradas\n        </h3>\n        <DosisAdministradasComponent />\n        <h3\n        className=\"t-center t-big\">\n            Total de vacunas recibidas\n        </h3>\n        <VacunasRecibidasComponent/>\n        <h1 \n        className=\"t-center t-big\"\n        >\n            Datos por provincias\n        </h1>\n        <MapComponent/>\n        <div className=''>\n            <h1 className='t-center t-big'>Datos obtenidos</h1>\n            <p\n                className='t-center t-small'\n            ><img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            /><a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/vacunas-recibidas-covid/'}>\n                API de la Junta de Castilla y León Vacunas recibidas covid\n            </a></p>\n            <p\n                className='t-center t-small'\n            >\n            <img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            />\n            <a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/personas-vacunadas-covid/'}>\n                API de la Junta de Castilla y León Personas vacunadas covid\n            </a>\n            </p>\n        </div>\n        <FooterComponent/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\n\nimport { CovidCyLComponent } from './CovidCyLComponent';\n\nReactDOM.render(\n    <CovidCyLComponent />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}