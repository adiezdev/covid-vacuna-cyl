{"version":3,"sources":["components/FooterComponent.js","helpers/getVacunasCyL.js","hooks/useFetch.js","selectors/personas-vacunadas/getPersonasVacunadas.js","functions/renameKeyObj.js","selectors/vacunas-recibidas/getVacunasRecibidas.js","components/MapComponent.js","hooks/useWindowSize.js","components/theme/themeSwitchReduce.js","components/theme/ThemeSwitchComponent.js","hooks/useLocalStorage.js","components/SpinnerComponent.js","components/vacunas-administradas/CardDosisAdministradasComponent.js","components/vacunas-administradas/DosisAdministradasComponent.js","components/vacunas-recibidas/VacunasRecibidasComponent.js","CovidCyLComponent.js","index.js"],"names":["FooterComponent","className","href","getVacunasCyL","a","lines","dataset","url","fetch","resp","json","records","vacunasrecibidas","map","record","id","recordid","fields","useFetch","rows","datset","isMounted","useRef","useState","isLogin","data","error","state","setState","useEffect","then","current","getPersonasVacunadas","total","reduce","count","dosis_administradas","ciclototal","personas_vacunadas_ciclo_completo","groupByDosisProvincia","group","provincia","vacuna","renameKeys","object","key","newKey","obj","clonedObj","Object","assign","targetKey","getVacunasRecibidas","total_vacunas_recibidas","parseInt","groupByMarca","groups","marca","groupByVacunasProvincias","MapComponent","personasvacunadasproprovincia","windowSize","with","height","setwindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","projection","d3","scale","center","pathGenerator","fillmap","numeroVacunas","features","d","i","data-tip","properties","name","data-for","style","fill","aria-haspopup","getContent","dataTip","themeSwitchReduce","action","type","document","documentElement","setAttribute","active","removeAttribute","ThemeSwitchComponent","useReducer","dispatch","initialValue","item","localStorage","getItem","storagevalues","setStorage","setItem","useLocalStorage","handleOnClick","onClick","role","SpinnerComponent","otherclass","data-testid","CardDosisAdministradasComponent","title","img","loading","src","alt","DosisAdministradasComponent","informations","sumaReduce","information","VacunasRecibidasComponent","AstraZeneca","Moderna","Pfizer","CovidCyLComponent","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f2a1791a.chunk.js","sourcesContent":["import React from 'react'\n\n/*\n* Componente project information\n*/\nexport const FooterComponent = () => {\n    return (\n        <>\n        <footer className=\"footer\">\n            <p>\n                Desarrollado por <a href='https://github.com/adilosa95'>Alejandro Díez</a> inspirado en el proyecto <a href='https://covid-vacuna.app/'>Covid-vacuna</a>\n            </p>\n            <p>\n                Si quieres mi proyecto <a href='https://github.com/adilosa95/covid-vacuna-cyl'>aquí está</a>\n            </p>\n            <div><a href='https://www.linkedin.com/in/adilosa95/'>Linkedin</a> | <a href='https://github.com/adilosa95'>Github</a> | <a href='https://dev.to/adilosa95'>Dev</a></div>\n        </footer>\n        </>\n    )\n}\n","/**\n * Funtion to call enpoints Api\n */\nexport const getVacunasCyL = async( lines = '1000' , dataset) =>{\n\n    const url = `https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=${dataset}&q=&rows=${lines}&sort=fecha&facet=fecha&facet=provincia&facet=marca`;\n    \n    const resp = await fetch(url)\n    const  { records }  = await resp.json() \n\n    const vacunasrecibidas = records?.map( record =>{ \n        return{\n            id: record.recordid,\n            fields: record.fields\n        }\n    })\n    return vacunasrecibidas;\n}","import { useEffect, useRef, useState } from \"react\"\nimport { getVacunasCyL } from \"../helpers/getVacunasCyL\"\n\n\n\nexport const useFetch = ( rows , datset ) =>{\n\n    const isMounted = useRef(true)\n    \n    const [isLogin] = useState(true)\n\n    const [state, setState] = useState({ data: null , error: null , isLogin })\n\n\n    useEffect(() => {\n        getVacunasCyL( rows , datset)\n        .then(\n            data =>{\n                isMounted.current\n                ?\n                    setState({\n                        data: data,\n                        error: null,\n                        isLogin: false\n                    })\n                :\n                    setState({\n                        data: null,\n                        error: 'Error al cargar',\n                        isLogin: true\n                    })\n            }\n        )\n    }, [rows ,  datset])\n\n    return state;\n}","/**\n * \n */\n\nexport const getPersonasVacunadas = ( records )=>{\n\n\n    const total = records?.reduce((count  , data)=>{\n        const { dosis_administradas } = data.fields\n\n        return count + dosis_administradas;\n    }, 0)\n\n\n    const ciclototal = records?.reduce((count  , data) =>\n    {\n        const { personas_vacunadas_ciclo_completo } = data.fields\n        \n        return count + personas_vacunadas_ciclo_completo;\n    },0)\n\n   \n    const groupByDosisProvincia = records?.reduce((group , data)=>{\n        const { dosis_administradas , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna: 0}\n        group[provincia].vacuna += dosis_administradas\n\n\n        return group;\n    }, {})\n\n\n    return {total , ciclototal, ...groupByDosisProvincia};\n}","/**\n * \n * @param {*} obj \n * @returns \n * \n * This function had to be created because, when doing the reducer and grouping, the keys of the object had separations.\n */\n\n//Initial clone object functiom\nconst clone = (obj) => Object.assign({}, obj);\n\nexport const renameKeys = (object, key, newKey) => {\n    //pass original objecto to clone\n     const clonedObj = clone(object);\n    //Catch original keys\n     const targetKey = clonedObj[key];\n    //Delete original key\n     delete clonedObj[key];\n    //asing new key\n     clonedObj[newKey] = targetKey;\n    //Return new object with new key\n     return clonedObj;\n   \n   };\n","\nimport { renameKeys } from '../../functions/renameKeyObj';\n/**\n * Method to add up all the figures of the vaccines, as the API does not give the option\n * @param {*} records \n * @returns \n */\nexport const getVacunasRecibidas = ( records )=>{\n\n    \n    const total = records?.reduce((count , data)=>{\n        const { total_vacunas_recibidas  } = data.fields\n\n        return count + parseInt(total_vacunas_recibidas);\n    }, 0)\n\n    let groupByMarca = records?.reduce((groups , data)=>{\n        const { total_vacunas_recibidas , marca } = data.fields\n        \n        groups[marca] = groups[marca] || {vacuna:0}\n        groups[marca].vacuna += total_vacunas_recibidas\n        \n        return groups;\n    }, {})\n\n    groupByMarca = renameKeys(groupByMarca , 'Astra Zéneca' , 'AstraZeneca')\n    groupByMarca = renameKeys(groupByMarca , 'Pfizer- BioNTech' , 'Pfizer')\n    \n    const groupByVacunasProvincias = records?.reduce((group , data)=>{\n        const { total_vacunas_recibidas  , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna:0}\n        group[provincia].vacuna += total_vacunas_recibidas\n\n        return group;\n    }, {})\n    \n    return { total, groupByMarca , groupByVacunasProvincias};\n}","import React from 'react'\nimport ReactTooltip from 'react-tooltip';\nimport data from '../data/cyl.geo.json'\n\nimport * as d3  from \"d3\";\n\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { useFetch } from '../hooks/useFetch';\nimport { getPersonasVacunadas } from '../selectors/personas-vacunadas/getPersonasVacunadas';\nimport { getVacunasRecibidas } from '../selectors/vacunas-recibidas/getVacunasRecibidas';\n\n\nexport const MapComponent = () => {\n        \n\n    const { data: personasvacunadasproprovincia  } = useFetch( 1000 , 'personas-vacunadas-covid')\n    const { ...groupByDosisProvincia } =  getPersonasVacunadas( personasvacunadasproprovincia )\n\n    const { data: vacunasrecibidas  } = useFetch(27 , 'vacunas-recibidas-covid')\n    const { groupByVacunasProvincias } = getVacunasRecibidas( vacunasrecibidas )\n\n    const  {windowSize}  = useWindowSize();\n    //Projection to map\n    const projection = d3.geoMercator()\n                        .scale([windowSize.with > 722 ? 6800 :  (950 * windowSize.with)/100])\n                        .center([ windowSize.with > 435 ?  (-0.45 * windowSize.with)/100 : windowSize.with > 360 ? (-0.05* windowSize.with)/100  : ( 0.20 * windowSize.with)/100  , windowSize.with > 500 ? 42 : 41.2])\n    //Paint var to json\n    const pathGenerator = d3.geoPath().projection(projection)\n    \n    const fillmap = (provincia) =>{\n        const numeroVacunas = groupByDosisProvincia[provincia] || ''\n\n        if(numeroVacunas){\n            if(numeroVacunas.vacuna <= 45000)\n                return '#78E92C'\n            if(numeroVacunas.vacuna <= 55000)\n                return '#58C60E'\n            if(numeroVacunas.vacuna <= 65000)\n                return '#48AA06'\n            if(numeroVacunas.vacuna <= 85000)\n                return '#4B9B16'\n            if(numeroVacunas.vacuna <= 95000)\n                return '#428A13'\n            if(numeroVacunas.vacuna <= 115000)\n                return '#428A13'\n            if(numeroVacunas.vacuna <= 135000)\n                return '#35700F'\n            if(numeroVacunas.vacuna <= 145000)\n                return '#2F630D'\n            if(numeroVacunas.vacuna <= 225000)\n                return '#235008'\n            if(numeroVacunas.vacuna <= 225000)\n                return '#163304'\n        }\n        return 'green'\n    }\n\n    return (\n        <>     \n        <svg          \n            className=\"cylmap centerItem\"\n        >\n         {\n            data.features.map((d,i)=>\n            <path\n                key={`path${i}`}\n                d={pathGenerator(d)}\n                className=\"provincies\"\n                data-tip={d.properties.name} //We pass the province to the toolip\n                data-for='data-province'\n                style={{fill: fillmap(d.properties.name)}}\n            />\n            )\n        }\n        </svg>\n        <ReactTooltip id='data-province' aria-haspopup='true' getContent={(dataTip)=>\n            !groupByDosisProvincia[dataTip] || !groupByVacunasProvincias[dataTip]\n            ?\n            dataTip\n            :\n            <div className=\"t-small\">\n                <div className='t-small t-center'>{dataTip}</div>\n                <p> - Dosis Administradas: {groupByDosisProvincia[dataTip].vacuna}</p>\n                <p> - Dosis Recibidas: {groupByVacunasProvincias[dataTip].vacuna}</p>\n            </div>\n        }/>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\n\n\n\nexport const useWindowSize = () =>{\n    //Inicialite with/heigth for server an render to match\n    const [windowSize, setwindowSize] = useState({\n        with: '',\n        height: '',\n    });\n\n    useEffect(() => {\n        //Call function on window resize\n        const handleResize = () =>{\n            setwindowSize({\n                with: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n        //Add event listener\n        window.addEventListener(\"resize\" , handleResize)\n        //CalResize when update initial size\n        handleResize();\n        //remove before eventi listener\n        return () => window.removeEventListener(\"resize\" , handleResize)\n    },[])\n\n   return {windowSize}\n}","\n/**\n * Switch that composes each activation case, in which the predefined theme of your choice is stored. \n*/\nexport const themeSwitchReduce = ( state = [],action )=>{\n\n    switch (action.type) {\n        case 'light':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             \n             return { type: action.type , active: 'isActivated'};\n\n         case 'dark':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n\n             return { type: action.type , active: 'isActivated'};\n\n        default:\n\n            document.documentElement.removeAttribute('data-theme')\n\n            return { type: action.type , active: 'isActivated'};\n        }\n}","import React, { useEffect, useReducer } from 'react'\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\nimport { themeSwitchReduce } from './themeSwitchReduce';\n\n/**\n * Check init localstorage\n*/\n\nexport const ThemeSwitchComponent = () => {\n\n    const [state, dispatch] = useReducer(themeSwitchReduce , '')\n    //Inicializamos con el theme del sistema\n    const [storagevalues , setStorage] = useLocalStorage('data-theme','other')\n\n    /**\n     * Lee el valor por guardado del hook local storage\n     */\n    useEffect(() => {\n        //cambia el tema en el sistema por el que esté\n        dispatch({\n            type: storagevalues\n        })\n\n    }, [storagevalues])\n\n    //Llamada para poder cambiar manualmente el theme de la pagina\n    const  handleOnClick = ( type )  => {\n        //disparador\n        dispatch({ type: type })\n        //cambio en el localstorage\n        setStorage(type)\n    }\n    /**\n     * If useReducer return state ative, check is same to type and add class isActiviated\n     */\n    return (\n        <div className='switchComponent'>\n            <label\n                className={`theme ${state.type === 'light' ? state.active : ''}`}\n                onClick={() => handleOnClick('light')}\n            >\n                <span role='img'>☀️</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'other' ? state.active : ''}`}\n                 onClick={() => handleOnClick('other')}\n\n            >\n                <span role='img'>💻</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'dark' ? state.active : ''}`}\n                 onClick={() => handleOnClick('dark')}\n\n            >\n                <span role='img'>🌑</span>\n            </label>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\"\n\n\n\nexport const useLocalStorage = (key, initialValue)=>{\n\n    \n    const [storagevalues, setStorage] = useState(()=>{//Cuando llega las vairables incializadas se dispara\n        try{\n            //Coge el tema que hay\n            const item = localStorage.getItem(key)\n            //Comporbamos que el local storage esté inicializado,sino es asi devuelve su\n            return item !== null ? item : initialValue;\n        }catch(error){\n            return initialValue\n        }\n    })\n    //Lanzamos el efecto para que se guarde en local storage\n    useEffect(() => {\n            localStorage.setItem(key , storagevalues)\n    }, [key , storagevalues])\n\n    return[ storagevalues, setStorage]\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n/**\n * \n * Component Spinner when loading data\n * @returns \n */\nexport const SpinnerComponent = ({otherclass = 'p-inline-block'}) => {\n    return (\n        <div className={`spinner ${otherclass}`} data-testid='loading'>\n        </div>\n    )\n}\n\nSpinnerComponent.propTypes ={\n    otherclass: PropTypes.string\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SpinnerComponent } from '../SpinnerComponent'\n/**\n * \n * Component forming the card\n */\nexport const CardDosisAdministradasComponent = ({ total = 0,title, img, loading}) => {\n\n\n    return (\n        <div className=\"maincard card-fiexWidth-midle\">\n            <header>\n                <img \n                className='header-img'\n                src={`${img}.svg`} \n                alt='icono_vacuna' \n                />\n                <p className='t-midle'>{ title }</p>\n            </header>\n            {\n                !loading\n                ?\n                <div className=\"data t-big\">{total}</div>\n                :\n                <SpinnerComponent></SpinnerComponent>\n            }\n        </div>\n    )\n}\n\n/**\n * Proptypes\n * To form the card, the title and the total are necessary\n */\nCardDosisAdministradasComponent.propTypes= {\n    total: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n}","import React from 'react'\nimport { CardDosisAdministradasComponent } from './CardDosisAdministradasComponent'\nimport { useFetch } from '../../hooks/useFetch'\nimport { getPersonasVacunadas } from '../../selectors/personas-vacunadas/getPersonasVacunadas'\n\n/**\n * Component form cards \n *  -vacunas administradas\n *  -ciclo completo\n * @returns \n */\nexport const DosisAdministradasComponent = () => {\n\n    const { data , isLogin } = useFetch( 1000 ,  'personas-vacunadas-covid')\n    const { total , ciclototal  } = getPersonasVacunadas(data)\n    //Create array to tow data \n    const informations = [\n        {\n            id:  0,\n            title:'Personas vacunadas',\n            sumaReduce: total,\n            img: './assets/icons/admin_vacuna'\n        },\n        {\n            id:  1,\n            title:'Personas con pauta completa',\n            sumaReduce: ciclototal,\n            img: './assets/icons/vacuna_completa'\n        }\n    ]\n    return (\n        <>\n            <div className=\"center-item-wrap flex-column\">\n                {\n                    informations.map( information => (\n                        <CardDosisAdministradasComponent\n                            key={information.id}\n                            total={information.sumaReduce}\n                            title={information.title}\n                            img={information.img}\n                            loading={isLogin}\n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}","import React from 'react'\nimport { useFetch } from '../../hooks/useFetch';\nimport { getVacunasRecibidas } from '../../selectors/vacunas-recibidas/getVacunasRecibidas';\nimport { SpinnerComponent } from '../SpinnerComponent';\n/**\n * Component for 'Vacunas recbidas'\n * and brand vaccine type\n * @returns \n */\nexport const VacunasRecibidasComponent = () => {\n    //Because to 27 lines is equals to last modification\n    const { data , isLogin } = useFetch(27 , 'vacunas-recibidas-covid')\n    const { total , groupByMarca: { AstraZeneca, Moderna ,Pfizer } }  = getVacunasRecibidas( data )\n    \n    return (\n        <div>\n            <div className=\"center-item-wrap\">\n                { \n                !isLogin ?\n                    <div className=\"maincard card-fiexWidth-big\" data-testid='list'>\n                    <header className=\"t-big\">Total</header>\n                    <div className=\"data t-big\">{total}</div>\n                    {\n                    <ul className='types-vaccines'>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/pfizer.png' alt='Pfizer'/>\n                            <div>{Pfizer.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/moderna.png' alt='Moderna'/>\n                            <div>{Moderna.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/astraceneca.png' alt='Astraceneca'/>\n                            <div>{AstraZeneca.vacuna}</div>\n                        </li>\n                    </ul>\n                    }\n                    </div>\n                :<SpinnerComponent></SpinnerComponent>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FooterComponent } from './components/FooterComponent'\nimport { MapComponent } from './components/MapComponent'\nimport { ThemeSwitchComponent } from './components/theme/ThemeSwitchComponent'\nimport { DosisAdministradasComponent } from './components/vacunas-administradas/DosisAdministradasComponent'\nimport { VacunasRecibidasComponent } from './components/vacunas-recibidas/VacunasRecibidasComponent'\n\nexport const CovidCyLComponent = () => {\n\n    return (\n        <>\n        <ThemeSwitchComponent/>\n        <h1 className=\"t-center t-big\">\n            Vacunación contra la COVID-19 en Castilla y León\n        </h1>\n        <h3 \n        className=\"t-center t-big\">\n            Vacunas Adminitradas\n        </h3>\n        <DosisAdministradasComponent />\n        <h3\n        className=\"t-center t-big\">\n            Total de vacunas recibidas\n        </h3>\n        <VacunasRecibidasComponent/>\n        <h1 \n        className=\"t-center t-big\"\n        >\n            Datos por provincias\n        </h1>\n        <MapComponent/>\n        <div>\n            <h1 className='t-center t-big'>Datos obtenidos</h1>\n            <p\n                className='t-center t-small'\n            ><img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            /><a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/vacunas-recibidas-covid/'}>\n                API de la Junta de Castilla y León Vacunas recibidas covid\n            </a></p>\n            <p\n                className='t-center t-small'\n            >\n            <img\n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={25}\n            />\n            <a\n            href={'https://analisis.datosabiertos.jcyl.es/explore/dataset/personas-vacunadas-covid/'}>\n                API de la Junta de Castilla y León Personas vacunadas covid\n            </a>\n            </p>\n        </div>\n        <FooterComponent/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\n\nimport { CovidCyLComponent } from './CovidCyLComponent';\n\nReactDOM.render(\n    <CovidCyLComponent />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}