{"version":3,"sources":["components/FooterComponent.js","hooks/useFetch.js","functions/functionRemaneKeysObj.js","selectors/vacunas-recibidas/getTotalVacunasRecibidas.js","components/MapComponent.js","selectors/personas-vacunadas/getTotalPersonasVacunadasProvincia.js","hooks/useWindowSize.js","components/theme/themeSwitchReduce.js","components/theme/ThemeSwitchComponent.js","components/vacunas-administradas/CardDosisAdministradasComponent.js","selectors/personas-vacunadas/getTotalPersonasVacunadas.js","components/vacunas-administradas/DosisAdministradasComponent.js","selectors/personas-vacunadas/getTotalCicloCompleto.js","components/vacunas-recibidas/VacunasRecibidasComponent.js","CovidCyLComponent.js","index.js"],"names":["FooterComponent","className","href","useFetch","url","isMounted","useRef","useState","isLogin","data","error","state","setState","useEffect","current","a","fetch","resp","json","fecthjoke","renameKeys","object","key","newKey","obj","clonedObj","Object","assign","targetKey","getTotalVacunasRecibidas","records","total","reduce","count","total_vacunas_recibidas","fields","parseInt","groupByType","group","marca","vacuna","groupByTypeProvinces","provincia","console","log","MapComponent","groupByProvince","dosis_administradas","getTotalPersonasVacunadasProvincia","vacunasrecibidas","size","with","undefined","height","windowSize","setwindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","projection","d3","scale","center","pathGenerator","features","map","d","i","data-tip","properties","name","data-for","id","aria-haspopup","getContent","dataTip","themeSwitchReduce","action","type","document","documentElement","setAttribute","localStorage","setItem","active","removeAttribute","init","getItem","ThemeSwitchComponent","useReducer","dispatch","theme","onClick","role","CardDosisAdministradasComponent","title","img","loading","src","alt","popTypes","PropTypes","number","isRequired","string","DosisAdministradasComponent","personasvacunadas","informations","sumaReduce","useMemo","ciclototal","personas_vacunadas_ciclo_completo","getTotalPersonasVacunadas","getTotalCicloCompleto","information","VacunasRecibidasComponent","AstraZeneca","Moderna","Pfizer","CovidCyLComponent","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9738d56a.chunk.js","sourcesContent":["import React from 'react'\n\n/*\nComponente con información del proyecto estático\n*/\nexport const FooterComponent = () => {\n    return (\n        <>\n        <footer className=\"footer\">\n            <p>\n                Desarrollado por <a href='https://github.com/adilosa95'>Alejandro Díez</a> inspirado en el proyecto <a href='https://covid-vacuna.app/'>Covid-vacuna</a>\n            </p>\n            <p>\n                Si quieres mi projecto <a href='https://github.com/adilosa95/covid-vacuna-cyl'>aquí está</a>\n            </p>\n            <div><a href='https://www.linkedin.com/in/adilosa95/'>Linkedin</a> | <a href='https://github.com/adilosa95'>Github</a> | <a href='https://dev.to/adilosa95'>Dev</a></div>\n        </footer>\n        </>\n    )\n}\n","import { useEffect, useRef, useState } from \"react\"\n\n\n\nexport const useFetch = ( url ) =>{\n\n    const isMounted = useRef(true)\n    const [isLogin] = useState(true)\n    const [state, setState] = useState({ data: null , error: null , isLogin })\n\n    useEffect(() => {\n        return () =>{\n            isMounted.current = false;\n        }        \n    }, [])\n\n    useEffect( () => {\n        const fecthjoke = async ()=>{\n            const resp = await fetch(url)\n            const json = await resp.json()\n            if(isMounted.current){\n                setState({ \n                    data: json,\n                    error: null,\n                    isLogin: false \n                })\n            }\n        }\n\n        fecthjoke();\n  \n    }, [url])\n\n    return state;\n}","/**\n * \n * @param {*} obj \n * @returns \n * \n * Function that renames the keys of an object according to the group\n */\n\n//Initial clone object functiom\nconst clone = (obj) => Object.assign({}, obj);\n\nexport const renameKeys = (object, key, newKey) => {\n    //pass original objecto to clone\n     const clonedObj = clone(object);\n    //Catch original keys\n     const targetKey = clonedObj[key];\n    //Delete original key\n     delete clonedObj[key];\n    //asing new key\n     clonedObj[newKey] = targetKey;\n    //Return new object with new key\n     return clonedObj;\n   \n   };\n","import { renameKeys } from '../../functions/functionRemaneKeysObj';\n\n\nexport const getTotalVacunasRecibidas = ( data )=>{\n    const { records } = data || {}\n\n    const total = records && records.reduce((count , data)=>{\n        const { total_vacunas_recibidas  } = data.fields\n\n        return count + parseInt(total_vacunas_recibidas);\n    }, 0)\n\n    let groupByType = records && records.reduce((group , data)=>{\n        const { total_vacunas_recibidas , marca } = data.fields\n        \n        group[marca] =group[marca] || {vacuna:0}\n        group[marca].vacuna += total_vacunas_recibidas\n\n\n        return group;\n    }, {})\n\n    groupByType = renameKeys(groupByType , 'Astra Zéneca' , 'AstraZeneca')\n    groupByType = renameKeys(groupByType , 'Pfizer- BioNTech' , 'Pfizer')\n\n    \n    let groupByTypeProvinces = records && records.reduce((group , data)=>{\n        const { total_vacunas_recibidas  , provincia } = data.fields\n        \n        console.log(provincia);\n\n        group[provincia] =group[provincia] || {vacuna:0}\n        group[provincia].vacuna += total_vacunas_recibidas\n\n\n        return group;\n    }, {})\n\n    console.log( groupByTypeProvinces);\n    \n    return { total, groupByType , groupByTypeProvinces};\n}","import React from 'react'\nimport ReactTooltip from 'react-tooltip';\nimport data from '../data/cyl.geo.json'\nimport * as d3  from \"d3\";\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { useFetch } from '../hooks/useFetch';\nimport { getTotalPersonasVacunadasProvincia } from '../selectors/personas-vacunadas/getTotalPersonasVacunadasProvincia';\nimport { getTotalVacunasRecibidas } from '../selectors/vacunas-recibidas/getTotalVacunasRecibidas';\n\nexport const MapComponent = () => {\n        \n    const { data: personasvacunadasproprovincia } = useFetch('https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=personas-vacunadas-covid&q=&rows=1000') || {}\n    const groupByProvince =  getTotalPersonasVacunadasProvincia( personasvacunadasproprovincia )\n\n    const { data: vacunasrecibidas} = useFetch('https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=vacunas-recibidas-covid&q=&rows=27&sort=fecha&facet=fecha&facet=provincia&facet=marca') || {}\n    const sumaReduce = getTotalVacunasRecibidas(vacunasrecibidas )\n\n    let { groupByTypeProvinces} = sumaReduce;\n\n\n    const size = useWindowSize();\n    //Projection to map\n    const projection = d3.geoMercator()\n                        .scale([size.with > 722 ? 6800 :  (950 * size.with)/100])\n                        .center([ size.with > 435 ?  (-0.45 * size.with)/100 : size.with > 360 ? (-0.05* size.with)/100  : ( 0.20 * size.with)/100  , size.with > 500 ? 42 : 41.2])\n    //Paint var to json\n    const pathGenerator = d3.geoPath().projection(projection)\n    \n    return (\n        <>     \n        <svg          \n            className=\"cylmap centerItem\"\n        >\n         {\n            data.features.map((d,i)=>\n            <path\n                key={`path${i}`}\n                d={pathGenerator(d)}\n                className=\"provincies\"\n                data-tip={d.properties.name}\n                data-for='data-province'\n            />\n            )\n        }\n        </svg>\n        <ReactTooltip id='data-province' aria-haspopup='true' getContent={(dataTip)=>\n            !groupByProvince[dataTip] \n            ?\n            dataTip\n            :\n            <div className=\"t-small\">\n                <div className='t-center-small'>{dataTip}</div>\n                <p> - Dosis Administradas: {groupByProvince[dataTip].vacuna}</p>\n                <p> - Dosis Recibidas: {groupByTypeProvinces[dataTip].vacuna}</p>\n            </div>\n            }/>\n        </>\n    )\n}\n","\n\nexport const getTotalPersonasVacunadasProvincia = ( data  )=>{\n    const { records } = data || {}\n\n    let groupByProvince = records && records.reduce((group , data)=>{\n        const { dosis_administradas , provincia } = data.fields\n        \n        group[provincia] =group[provincia] || {vacuna: 0}\n        group[provincia].vacuna += dosis_administradas\n\n\n        return group;\n    }, {})\n\n    return {...groupByProvince};\n}","import { useEffect, useState } from \"react\"\n\n\n\nexport const useWindowSize = () =>{\n    //Inicialite with/heigth for server an render to match\n    const [windowSize, setwindowSize] = useState({\n        with: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        //Call function on window resize\n        const handleResize = () =>{\n            setwindowSize({\n                with: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n        //Add event listener\n        window.addEventListener(\"resize\" , handleResize)\n        //CalResize when update initial size\n        handleResize();\n        //remove before eventi listener\n        return () => window.removeEventListener(\"resize\" , handleResize)\n    },[])\n\n   return windowSize\n}","\n/**\n * Switch that composes each activation case, in which the predefined theme of your choice is stored. \n*/\nexport const themeSwitchReduce = ( state = [],action )=>{\n\n    switch (action.type) {\n        case 'light':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             localStorage.setItem('data-theme',action.type)\n\n\n             return { type: action.type , active: 'isActivated'};\n\n         case 'dark':\n\n             document.documentElement.setAttribute('data-theme',action.type)\n             localStorage.setItem('data-theme',action.type)\n\n\n             return { type: action.type , active: 'isActivated'};\n\n        default:\n\n            document.documentElement.removeAttribute('data-theme')\n             localStorage.setItem('data-theme',action.type)\n            \n            return { type: action.type , active: 'isActivated'};\n        }\n}","import React, { useEffect, useReducer } from 'react'\nimport { themeSwitchReduce } from './themeSwitchReduce';\n\n/**\n * Check init localstorage\n*/\nconst init = () =>{\n    return localStorage.getItem('data-theme') || ''\n}\n\nexport const ThemeSwitchComponent = () => {\n\n    const [state, dispatch] = useReducer(themeSwitchReduce , init)\n\n    /**\n     * When logadind compoenent, check theme in local storage\n     * if not init, predefinied 'other' in useReducer\n    */\n    useEffect(() => {\n        \n        const theme = localStorage.getItem('data-theme') || 'other'\n\n        dispatch({\n            type: theme\n        })\n    }, [])\n    /**\n     * If useReducer return state ative, check is same to type and add class isActiviated\n     */\n    return (\n        <div className='switchComponent'>\n            <label\n                className={`theme ${state.type === 'light' ? state.active : ''}`}\n                onClick={() => dispatch({\n                    type: 'light'\n                })}\n            >\n                <span role='img'>☀️</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'other' ? state.active : ''}`}\n                 onClick={() => dispatch({\n                    type: 'other'\n                })}\n            >\n                <span role='img'>💻</span>\n            </label>\n            <label\n                 className={`theme ${state.type === 'dark' ? state.active : ''}`}\n                 onClick={() => dispatch({\n                    type: 'dark'\n                })}\n            >\n                <span role='img'>🌑</span>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n/**\n * \n * @param {*} param0 \n * @returns \n * \n * Component card vaccine\n */\nexport const CardDosisAdministradasComponent = ({ total,title, img, loading}) => {\n\n\n    return (\n        <div className=\"maincard card-fiexWidth-midle\">\n            <header>\n                <img \n                className='header-img'\n                src={`${img}.svg`} \n                alt='icono_vacuna' \n                />\n                <p className='t-midle'>{ title }</p>\n            </header>\n            {\n                !loading\n                ?\n                <div className=\"data t-big\">{total}</div>\n                :\n                <div className=\"spinner p-inline-block\"></div>\n            }\n        </div>\n    )\n}\n\n/**\n * Proptypes\n * To form the card, the title and the total are necessary\n */\nCardDosisAdministradasComponent.popTypes= {\n    total: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n}","\n\nexport const getTotalPersonasVacunadas = ( data )=>{\n    const { records } = data || {}\n\n\n    const total = records && records.reduce((count  , data)=>{\n        const { dosis_administradas } = data.fields\n\n        return count + dosis_administradas;\n    }, 0)\n\n\n    const ciclototal = records && records.reduce((count  , data) =>\n    {\n        const { personas_vacunadas_ciclo_completo } = data.fields\n        \n        return count + personas_vacunadas_ciclo_completo;\n    },0)\n    return {total , ciclototal};\n}","import React, { useMemo } from 'react'\nimport { CardDosisAdministradasComponent } from './CardDosisAdministradasComponent'\nimport { useFetch } from '../../hooks/useFetch'\nimport { getTotalPersonasVacunadas } from '../../selectors/personas-vacunadas/getTotalPersonasVacunadas'\nimport { getTotalCicloCompleto } from '../../selectors/personas-vacunadas/getTotalCicloCompleto'\n\n/**\n * Component form cards \n *  -vacunas administradas\n *  -ciclo completo\n * @returns \n */\nexport const DosisAdministradasComponent = () => {\n\n    const { data: personasvacunadas, isLogin} = useFetch('https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=personas-vacunadas-covid&q=&rows=1000') || {}\n    //Create array to tow data \n    const informations = [\n        {\n            id:  0,\n            title:'Personas vacunadas',\n            sumaReduce: useMemo(() => getTotalPersonasVacunadas(personasvacunadas ), [personasvacunadas]) ,\n            img: './assets/icons/admin_vacuna'\n        },\n        {\n            id:  1,\n            title:'Personas con pauta completa',\n            sumaReduce:  useMemo(() => getTotalCicloCompleto(personasvacunadas ), [personasvacunadas]),\n            img: './assets/icons/vacuna_completa'\n        }\n    ]\n    return (\n        <>\n            <div className=\"center-item-wrap flex-column\">\n                {\n                    informations.map( information => (\n                        <CardDosisAdministradasComponent\n                            key={information.id}\n                            total={information.sumaReduce.total}\n                            title={information.title}\n                            img={information.img}\n                            loading={isLogin}\n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}","\n\nexport const getTotalCicloCompleto = (data) =>{\n    const { records } = data || {}\n\n    const total = records && records.reduce((count  , data) =>\n    {\n        const { personas_vacunadas_ciclo_completo } = data.fields\n        \n        return count + personas_vacunadas_ciclo_completo;\n    },0)\n    return {total};\n}","import React, { useMemo } from 'react'\nimport { useFetch } from '../../hooks/useFetch';\nimport { getTotalVacunasRecibidas } from '../../selectors/vacunas-recibidas/getTotalVacunasRecibidas';\n\nexport const VacunasRecibidasComponent = () => {\n\n    const { data: vacunasrecibidas, isLogin} = useFetch('https://analisis.datosabiertos.jcyl.es/api/records/1.0/search/?dataset=vacunas-recibidas-covid&q=&rows=27&sort=fecha&facet=fecha&facet=provincia&facet=marca') || {}\n\n    const sumaReduce = useMemo(() => getTotalVacunasRecibidas(vacunasrecibidas ), [vacunasrecibidas]) \n\n    let { total , groupByType} = sumaReduce;\n    \n    const { AstraZeneca, Moderna ,Pfizer } = {...groupByType}\n\n    return (\n        <div>\n            <div className=\"center-item-wrap\">\n                {\n                !isLogin ?\n                    <div className=\"maincard card-fiexWidth-big\">\n                    <header className=\"t-big\">Total</header>\n                    <div className=\"data t-big\">{total}</div>\n                    {\n                    <ul className='types-vaccines'>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/pfizer.png' alt='Pfizer'/>\n                            <div>{Pfizer.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/moderna.png' alt='Pfizer'/>\n                            <div>{Moderna.vacuna}</div>\n                        </li>\n                        <li className=\"t-midle\">\n                            <img src='./assets/vacunas/astraceneca.png' alt='Pfizer'/>\n                            <div>{AstraZeneca.vacuna}</div>\n                        </li>\n                    </ul>\n                    }\n                    </div>\n                :<div className=\"spinner p-inline-block\"></div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FooterComponent } from './components/FooterComponent'\nimport { MapComponent } from './components/MapComponent'\nimport { ThemeSwitchComponent } from './components/theme/ThemeSwitchComponent'\nimport { DosisAdministradasComponent } from './components/vacunas-administradas/DosisAdministradasComponent'\nimport { VacunasRecibidasComponent } from './components/vacunas-recibidas/VacunasRecibidasComponent'\n\nexport const CovidCyLComponent = () => {\n\n    return (\n        <>\n        <ThemeSwitchComponent/>\n        <h1 className=\"center-item-wrap t-big\">\n            <img \n            src={'./assets/cyl.png'}\n            alt={'Escudo de la cominidad de castilla y leon'}\n            width={100}/>\n            Vacunación contra la COVID-19 en Castilla y León\n        </h1>\n        <h3 \n        className=\"t-center-big\">\n            Vacunas Adminitradas\n        </h3>\n        <DosisAdministradasComponent />\n        <h3\n        className=\"t-center-big\">\n            Total de vacunas recibidas\n        </h3>\n        <VacunasRecibidasComponent/>\n        <h1 \n        className=\"t-center-big\"\n        >\n            Datos por provincias\n        </h1>\n        <MapComponent/>\n        <FooterComponent/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\n\nimport { CovidCyLComponent } from './CovidCyLComponent';\n\nReactDOM.render(\n    <CovidCyLComponent />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}